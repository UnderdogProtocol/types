import { extendZodWithOpenApi } from "@asteasolutions/zod-to-openapi";
import { z } from "zod";

import { statusEnumSchema, transactionTypesEnumSchema } from "./enum";
import { publicKeyValueSchema } from "./metadata";
import { dateStringSchema } from "./primitive";

extendZodWithOpenApi(z);

export const transactionSchema = z.object({
  id: z.string().openapi({
    description: "Transaction ID that identifies the Transaction generated by an API request",
  }),
  status: statusEnumSchema,
  type: transactionTypesEnumSchema,
  walletAddress: publicKeyValueSchema,
  data: z.string().optional().openapi({
    description: "Transaction data in stringified JSON format",
  }),
  signature: z.string().nullable().optional().openapi({
    description: "Signature of the on-chain transaction",
    example: "2yVZcx5rMDLDcqe31Uua6a93qw3qrNMsjroYWXV3sytttnrPSxk2heGK7yUorW6KrfiEpkLNYNVPivhgoigdRnK6",
  }),
  createdAt: dateStringSchema,
});

export type Transaction = z.infer<typeof transactionSchema>;
